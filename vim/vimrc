" Using vim-plug to manage plugins
call plug#begin('~/.vim/plugged')

" Status bar / buffer manager
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'

" Python code completion
" https://github.com/davidhalter/jedi-vim
Plug 'davidhalter/jedi-vim'
Plug 'ervandew/supertab'

" Surround - change surrounding elements ()'s, {}'s, ...
" Examples:
" 	cs"' changes surrounding " to '
" 	ysiw" puts quotes around the current word
Plug 'tpope/vim-surround'

" XML Edit
Plug 'sukima/xmledit'

" Jinja2 template highlighting
Plug 'Glench/Vim-Jinja2-Syntax'

" Bulk commenting
Plug 'tpope/vim-commentary'

" Syntax checking
" Virtualenv needs pyflakes, pep8, pep257, pylint, mccabe
Plug 'scrooloose/syntastic'

" Shell in vim
Plug 'Shougo/vimshell.vim'
" Required for vimshell
Plug 'Shougo/vimproc.vim'

" ctrl-p for finding stuff
Plug 'ctrlpvim/ctrlp.vim'

" Color Scheme
Plug 'vim-scripts/obsidian2.vim'

" Indent handling
Plug 'hynek/vim-python-pep8-indent'

"
" Javascript
"

" pangloss/vim-javascript
" https://github.com/pangloss/vim-javascript
Plug 'pangloss/vim-javascript'

" vim-javascript-syntax
" https://github.com/jelera/vim-javascript-syntax
Plug 'jelera/vim-javascript-syntax'

" mxw/vim-jsx
" https://github.com/mxw/vim-jsx
Plug 'mxw/vim-jsx'

call plug#end()


" Set the color scheme
colo obsidian2

" Turn syntax highlighting on
syntax on
set background=dark

" Show line numbers
set number

" Highlight current line
set cursorline

" Turn on file type handling
" filetype plugin indent on

" Autoload changes when files change outsid of vim
set autoread

" Auto whitespace cleaning
autocmd BufWritePre * :%s/\s\+$//e

" jedi-vim configuration
let g:jedi#use_splits_not_buffers = "left"

" Airline plugin (status bar and buffer manager)
let g:airline_theme = 'bubblegum'
let g:airline#extensions#tabline#enabled = 1
" This makes sure Airline loads even with a single buffer
set laststatus=2

" Syntastic Configuration
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
let g:syntastic_error_symbol = "✗✗"
let g:syntastic_warning_symbol = "!!"
" Flake8 line length
let g:syntastic_python_flake8_args = "--max-line-length=100"
" Ignore [invalid-name] pylint warnings. A bit limiting.
let g:syntastic_python_pylint_post_args='--disable=invalid-name,missing-docstring,old-style-class,no-init,too-few-public-methods,too-many-ancestors'

" javascript JSX support
let g:syntastic_javascript_checkers = ['jsxhint']
